# 계산기

요구사항
    1. 입력 받은 숫자 반드시 정수형 변화
    2. 

예외처리
    1. division by zero
    2. Invalid operator

숫자_1 입력
    예외 발생 상황:
        1. 숫자 아님
        2. 

부호 입력
    예외 발생 상황:
        1. +,-,*,/ 아님

숫자_2 입력
    예외 발생 상황:
        1. 숫자 아님


필요한 함수
    1. is_num
    2. is_opt


Original calculator.py backup
def add(a,b):
    return int(a)+int(b)

def subtract(a,b):
    return int(a)-int(b)

def multiply(a,b):
    return int(a)*int(b)

def divide(a,b):
    try:
        return int(a)/int(b)
    except:
        return "E1"

def operating(a,oper,b):
    match oper:
        case '+':
            return add(a,b)
        case '-':
            return subtract(a,b)
        case '*':
            return multiply(a,b)
        case '/':
            return divide(a,b)
        case _:
            return "E2"

def main():
    num1 = input("num1: ")
    opt = input("operator: ")
    num2 = input("num2: ")

    result = operating(num1,opt,num2)

    if (result == "E1"):
        print("Error:Division by zero")
    elif (result == "E2"):
        print("Invalid operator")
    else:
        print("Result:", result)

if __name__ == "__main__":
    main()
        


# 정렬 계산기

1. 버블 정렬
    두 원소 비교해서 교환
    [5,3,1,4]
    1. [5,3,1,4]->[3,5,1,4]->[3,1,5,4]->[3,1,4,5]
    2. [3,5,1,4]->[3,1,5,4]->[1,3,5,4]->[1,3,4,5]
    ==> 교환 없으면 정렬 끝
2. 선택 정렬
    가장 작은 값 찾아 맨 앞 원소와 교환
    [5,3,1,4]
    1. [5,3,1,4]->[1,3,5,4]->[1,3,5,4]->[1,3,4,5]
    ==> 교환 횟수가 정해짐
    [4,2,5,1,3,6]
        min_index = 3
        real_min_index = 3
    [1,2,5,4,3,6]
        min_index = 0
        real_min_index = 1
    [1,2,5,4,3,6]
        min_index=2
        real_min_index=4
    [1,2,3,4,5,6]
    [1,2,3,4,5,6]
    [1,2,3,4,5,6]

3. 삽입 정렬
    앞 부분 정렬된 상태 유지하며 삽입
    두번째 원소부터 시작
    [4,2,5,1,3,6]
    [1,4,2,5,3,6]
    [1,2,4,5,3,6]
    [1,2,4,5,3,6]
    [1,2,3,4,5,6]
    [1,2,3,4,5,6]


    [1,4,2,3]
    i=0
        inserted = False
        j=0 -> lst[0]=1<lst[1]=4
            no swap
        print --> [1,4,2,3]
    i=1
        inserted = False
        j=0 -> lst[1] lst[1]
    i=2


괄호 안 괄호
소괄호->중괄호->대괄호

# 후위식 생성
숫자는 그냥 출력
빈 스택이면 연산자 스택에 쌓음
스택에 있는 연산자와 비교해서 스택에 있는 연산자가 우선이거나 같으면 pop하고 넣기
여는 괄호는 그냥 스택에 추가
여는 괄호 바로 다음 연산자는 그냥 스택에 추가
닫는 괄호는 여는 괄호가 나올 때까지 스택 pop해서 출력
출력하고 나면 괄호 버림

# 후위식 보고 계산하기
숫자는 스택으로 가기
연산자 나오면 최상위 2 숫자를 pop함
이때 처음 나온게 연산자 뒤 숫자임
